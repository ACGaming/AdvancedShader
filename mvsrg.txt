advancedshader/Hook$AnisotropicFilter.bindShaderMultiTexture(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V
	normal 法线图
	specular 高光图
	sprite 精灵图元素
advancedshader/Hook$AnisotropicFilter.getFrameCounter(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)I
	e 异常
	sprite 精灵图元素
advancedshader/Hook$AnisotropicFilter.loadShaderSprite(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V
	sprite 精灵图元素
advancedshader/Hook$AnisotropicFilter.loadSpriteSingle(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V
	data 动画数据
	e 异常
	sprite 着色器精灵图元素
	parent 原始精灵图元素
	single 独立元素
advancedshader/Hook$AnisotropicFilter.preUploadDisplayList(Lnet/minecraft/util/BlockRenderLayer;)V
	layer 当前地形渲染类型
advancedshader/Hook$AnisotropicFilter.setFrameCounter(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;I)V
	sprite 精灵图元素
	i 帧计数
advancedshader/Hook$AnisotropicFilter.unloadShaderSprite(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V
	sprite 精灵图元素
advancedshader/Hook$AnisotropicFilter.updateShaderSpriteAnimation(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Z
	single 独立元素
	sprite 着色器精灵图元素
	parent 原始精灵图元素
advancedshader/Hook$Blend.parseBlendBuffer([Ljava/lang/String;Ljava/lang/String;)V
	i 缓冲区纹理ID
	program 着色器名称
	buffer 缓冲区纹理名称
	p 着色器程序
	tokens 配置分词
	value 值
advancedshader/Hook$Blend.parseBlendState(Ljava/lang/String;)Lnet/optifine/render/GlBlendState;
	e 异常
	s 颜色混合配置文本
advancedshader/Hook$Blend.setBlendIndexed(ILnet/optifine/render/GlBlendState;)V
	i 缓冲区
	state 颜色混合配置
advancedshader/Hook$Blend.updateNewBlendStateIndexed(Lnet/optifine/shaders/Program;)V
	i 临时下标
	usedDrawBuffers 已使用缓冲区数量
	settings 渲染目标配置
	program 着色器程序
	states 颜色混合配置集
advancedshader/Hook$Blend.updateOldBlendStateIndexed(Lnet/optifine/shaders/Program;)V
	program 着色器程序
advancedshader/Hook$BlockAliasFix$MatchBlockState.<init>(I[I[Ljava/lang/String;)V
	token 属性对
	property 方块属性
	id 原方块ID
	metadatas 没啥用
	properties 方块属性集
	map 方块属性表
advancedshader/Hook$BlockAliasFix.getBlockAliasId(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/IBlockAccess;)I
	base 基础方块状态
	v 属性名
	value 属性值字符串
	prop 属性键
	key 属性键字符串
	matchState 方块状态匹配器
	properties 待匹配属性集
	matched 匹配标识
	match 单一匹配ID
	matches 匹配当前方块的自定义ID
	alias 自定义方块ID
	blockState 方块状态
	blockPos 方块坐标
	blockAccess 咋瓦鲁多
	block 方块
	state 方块实际状态
	aliasList 方块自定义ID集合
	id 方块ID
	metadata 没啥用的方块元数据
	aliases 当前方块可用的全部自定义ID
advancedshader/Hook$BlockAliasFix.getBlockAliases()[[Lnet/optifine/shaders/BlockAlias;
	e 异常
advancedshader/Hook$BufferSize.checkResize(Lnet/optifine/shaders/Program;)Z
	i 临时下标
	program 着色器程序
	resized 切换可变分辨率帧缓冲
advancedshader/Hook$BufferSize.getResizedHeight(II)I
	height 高度
	buffer 缓冲区
advancedshader/Hook$BufferSize.getResizedWidth(II)I
	width 宽度
	buffer 缓冲区
advancedshader/Hook$BufferSize.parseBufferSizes(Ljava/util/Properties;)V
	rw 相对宽度
	rh 相对高度
	aw 绝对宽度
	ah 绝对高度
	values 值分词集
	value 值
	s1 缓冲区纹理名
	i 缓冲区纹理ID
	tokens 分词集
	keyStr 配置名
	key 键对象所以为什么不能直接是字符串
	props 配置集
advancedshader/Hook$BufferSize.preDrawComposite()V
	settings 渲染目标配置
	buffer 主渲染目标
	active 当前着色器程序
advancedshader/Hook$BufferSize.resetBufferSizes()V
	i 临时下标
advancedshader/Hook$BufferSize.shouldBindForSetup(I)Z
	buffer 缓冲区
advancedshader/Hook$BufferSize.switchFramebuffer(I)V
	i 临时下标
	buffer 目标缓冲区
advancedshader/Hook$BufferSize.updateProgramSize(Lnet/optifine/shaders/Program;)V
	c 渲染目标
	usedDrawBuffers 已使用缓冲区数量
	index 缓冲区
	tempSize 当前缓冲区纹理分辨率
	i 临时下标
	relative 是否相对屏幕分辨率
	size 缓冲区纹理分辨率
	settings 渲染目标配置
	program 着色器程序
advancedshader/Hook$CameraFix.fixCamera()V
	offset 相机偏移值
	offsetN 相机反向偏移值
	mv 变换矩阵
	mvi 逆变换矩阵
advancedshader/Hook$CameraFix.fixCameraShadow()V
	offset 相机偏移值
	offsetN 相机反向偏移值
	smv 阴影变换矩阵
	smvi 阴影逆变换矩阵
advancedshader/Hook$CameraFix.getMatrix(Ljava/nio/FloatBuffer;)Lorg/lwjgl/util/vector/Matrix4f;
	buffer 矩阵缓冲区
advancedshader/Hook$CameraFix.setMatrix(Ljava/nio/FloatBuffer;Lorg/lwjgl/util/vector/Matrix4f;)V
	buffer 矩阵缓冲
	mat 矩阵
advancedshader/Hook$ChunkOffset.setChunkOffset(FFF)Z
	offsetX 区块偏移X
	offsetY 区块偏移Y
	offsetZ 区块偏移Z
advancedshader/Hook$ComputeShader$ComputeProgram.<init>(Ljava/lang/String;Lnet/optifine/shaders/ProgramStage;)V
	name 着色器名称
	programStage 着色阶段
advancedshader/Hook$ComputeShader$ComputeProgram.setLocalSize(Ladvancedshader/Hook$ComputeShader$Vector3i;)V
	localSize 工作组大小
advancedshader/Hook$ComputeShader$ComputeProgram.setWorkGroups(Ladvancedshader/Hook$ComputeShader$Vector3i;)V
	workGroups 工作组数量
advancedshader/Hook$ComputeShader$ComputeProgram.setWorkGroupsRender(Lorg/lwjgl/util/vector/Vector2f;)V
	workGroupsRender 渲染倍率
advancedshader/Hook$ComputeShader$Vector3i.<init>(III)V
	x X数量
	y Y数量
	z Z数量
advancedshader/Hook$ComputeShader.bindColorImages()V
	i 临时下标
advancedshader/Hook$ComputeShader.createCompShader(Ladvancedshader/Hook$ComputeShader$ComputeProgram;Ljava/lang/String;)I
	e 异常
	uniform 统一变量名
	j 纹理ID
	settings 多层级纹理生成配置
	buffer 缓冲区纹理名
	index 缓冲区纹理ID
	localSize 工作组大小
	workGroups 工作组数量
	workGroupsRender 渲染倍率
	line 代码行
	shaderline 着色器代码行
	macroState 宏状态机
	compCode 处理后源码
	reader 源码读取者
	activeOptions 与源码不同的光影选项
	listFiles 源码文件集
	compShader 计算着色器
	program 着色器程序
	filename 源码文件路径
	input 源码输入流
advancedshader/Hook$ComputeShader.deleteComputes(Lnet/optifine/shaders/Program;)V
	comp 计算着色器程序
	program 着色器程序
	comps 计算着色器程序集
advancedshader/Hook$ComputeShader.dispatchCompute(Ladvancedshader/Hook$ComputeShader$ComputeProgram;)V
	workGroupsRender 渲染倍率
	width 屏幕宽度
	height 屏幕高度
	localSize 工作组大小
	xGroups X方向工作组数量
	yGroups Y方向工作组数量
	sp 是否阴影渲染阶段
	workGroups 工作组数量
	cp 计算着色器程序
advancedshader/Hook$ComputeShader.dispatchComputes(Lnet/optifine/shaders/Program;)V
	comp 计算着色器程序
	i 临时下标
	program 着色器程序
	comps 计算着色器程序集
advancedshader/Hook$ComputeShader.getColorImageIndex(Ljava/lang/String;)I
	name 颜色图像名称
	index 颜色图像ID
advancedshader/Hook$ComputeShader.getImageFormat(I)I
	textureFormat 纹理像素画素格格格式
advancedshader/Hook$ComputeShader.getShadowColorImageIndex(Ljava/lang/String;)I
	name 阴影颜色图像名称
	index 阴影颜色图像ID
advancedshader/Hook$ComputeShader.getValueIVec3(Ljava/lang/String;)Ladvancedshader/Hook$ComputeShader$Vector3i;
	e 异常
	num 数值字符串
	i 临时下标
	nums 数值集
	str 数值集字符串
	values 数值字符串集
	value 可能为空的数值集字符串
	line 代码行
	matcher 正则匹配
advancedshader/Hook$ComputeShader.getValueVec2(Ljava/lang/String;)Lorg/lwjgl/util/vector/Vector2f;
	e 异常
	num 数值字符串
	i 临时下标
	nums 数值集
	str 数值集字符串
	values 数值字符串集
	value 可能为空的数值集字符串
	line 代码行
	matcher 正则匹配
advancedshader/Hook$ComputeShader.hasComputes(Lnet/optifine/shaders/Program;)Z
	program 着色器程序
advancedshader/Hook$ComputeShader.isConstIVec3(Ljava/lang/String;Ljava/lang/String;)Z
	line 代码行
	name 目标变量
	matcher 正则匹配
advancedshader/Hook$ComputeShader.isConstVec2(Ljava/lang/String;Ljava/lang/String;)Z
	line 代码行
	name 目标变量
	matcher 正则匹配
advancedshader/Hook$ComputeShader.isLayout(Ljava/lang/String;Ljava/lang/String;)Z
	line 代码行
	type 输入输出类型
	matcher 正则匹配
advancedshader/Hook$ComputeShader.parseLocalSize(Ljava/lang/String;)Ladvancedshader/Hook$ComputeShader$Vector3i;
	e 异常
	k 键
	v 值
	num num
	pair 赋值字符串
	tokens 键值对
	l 临时下标
	value 匹配结果
	x 工作组X大小
	y 工作组Y大小
	z 工作组Z大小
	values 赋值集
	line 代码行
	matcher 正则匹配
advancedshader/Hook$ComputeShader.parseUniform(Ljava/lang/String;)V
	uniform 统一变量名
	i 图像ID
advancedshader/Hook$ComputeShader.resolveIncludes(Ljava/io/BufferedReader;Ljava/lang/String;Lnet/optifine/shaders/IShaderPack;ILjava/util/List;I)Ljava/io/BufferedReader;
	clazz 类对象
	e 异常
	reader 源码读取者
	filename 源码文件路径
	shaderPack 当前光影宝宝
	i 文件ID
	listFiles 源码文件集
	j 源码包含层级_太深会死掉的啦
advancedshader/Hook$ComputeShader.setupComputeProgram(Ladvancedshader/Hook$ComputeShader$ComputeProgram;Ljava/lang/String;)V
	compProgram 着色器程序
	code 验证状态
	program 计算着色器程序
	cshPath 源码路径
	compShader 计算着色器
advancedshader/Hook$ComputeShader.setupComputePrograms(Lnet/optifine/shaders/Program;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	suffix 着色器后缀
	compName 计算着色器名称
	path 计算着色器路径
	compProgram 计算着色器程序
	j 临时下标
	list 已编译列表
	program 着色器程序
	prefixShaders 上级路径
	programName 着色器名称
	shaderExt 着色器后缀名
advancedshader/Hook$CoreProfile.convertCoreProfile(Ljava/io/BufferedReader;)Ljava/io/BufferedReader;
	macro 宏
	name 名称
	type 类型
	line 源码行
	matcher 正则匹配
	reader 源码读取者
	replaced 已替换过的宏
	header 源码头
	content 源码内容
advancedshader/Hook$CustomUniform$2.eval()F
	pos 相机坐标_确认要用相机的坐标而不是玩家的坐标吗
	biome 当前生物群系
advancedshader/Hook$CustomUniform$3.eval()F
	pos 相机坐标_高版本说能用那就用吧
	biome 当前生物群系
advancedshader/Hook$CustomUniform$BiomeCategory.<init>(Ljava/lang/String;I[Lnet/minecraft/world/biome/Biome;)V
	biomes 生物群系集
advancedshader/Hook$CustomUniform$BiomeCategory.addBiome(Lnet/minecraft/world/biome/Biome;)V
	biome 生物群系_但别人也调用不了啊
advancedshader/Hook$CustomUniform$BiomeCategory.fromBiome(Lnet/minecraft/world/biome/Biome;)Ladvancedshader/Hook$CustomUniform$BiomeCategory;
	category 群系类型
	biome 生物群系
advancedshader/Hook$CustomUniform$BiomeCategory.valueOf(Ljava/lang/String;)Ladvancedshader/Hook$CustomUniform$BiomeCategory;
	name name
advancedshader/Hook$CustomUniform$BiomeRainType.fromBiome(Lnet/minecraft/world/biome/Biome;)Ladvancedshader/Hook$CustomUniform$BiomeRainType;
	biome 生物群系
advancedshader/Hook$CustomUniform$BiomeRainType.valueOf(Ljava/lang/String;)Ladvancedshader/Hook$CustomUniform$BiomeRainType;
	name name
advancedshader/Hook$CustomUniform.registerExpressions(Lnet/optifine/shaders/uniform/ShaderExpressionResolver;)V
	category 群系类型
	rain 群系降雨类型
	resolver 表达式解析器
advancedshader/Hook$ForwardFeatures$BlockMapper.match([Ljava/lang/String;)[Ljava/lang/String;
	tokens 键值对
	property 属性字符串
	key 键
	matched 匹配成功标识
	target 匹配目标
	properties 方块属性集
	results 匹配结果
	prop 待匹配属性
	same 直接映射属性
advancedshader/Hook$ForwardFeatures$Target.toString()Ljava/lang/String;
	entry 属性键值对
	builder 字符串组装器
advancedshader/Hook$ForwardFeatures.<clinit>()V
	e 异常
	map 表
advancedshader/Hook$ForwardFeatures.actionPerformed(Lnet/minecraft/client/gui/GuiButton;Z)Z
	key 选项名
	btn 光影选项按钮
	button 按钮
	rightClick 右键点击
advancedshader/Hook$ForwardFeatures.addPlayerMoodDebug(Ljava/util/List;)V
	list 调试信息列表
advancedshader/Hook$ForwardFeatures.getBlockRenderLayers([Lnet/minecraft/util/BlockRenderLayer;)[Lnet/minecraft/util/BlockRenderLayer;
	i 临时下标
	layers 地形渲染类型集
	element 方法调用者
	clazz 让我看看是哪个小兔崽子
advancedshader/Hook$ForwardFeatures.getButtonText(Lnet/optifine/shaders/config/EnumShaderOption;)Ljava/lang/String;
	option 光影选项
	key 光影选项名
advancedshader/Hook$ForwardFeatures.getEntityAliasID(ILnet/minecraft/entity/Entity;)I
	id 实体ID
	entity 实体
advancedshader/Hook$ForwardFeatures.getEnumShaderOption(Lnet/optifine/shaders/config/EnumShaderOption;)Ljava/lang/String;
	option 光影选项
advancedshader/Hook$ForwardFeatures.getGameVersionKey(Ljava/lang/String;)Ljava/lang/String;
	old 原始游戏版本
advancedshader/Hook$ForwardFeatures.getOptiFineVersion(Ljava/lang/String;)Ljava/lang/String;
	old 原始高清修复版本
advancedshader/Hook$ForwardFeatures.getRenderLayer(Lnet/minecraft/util/BlockRenderLayer;)Lnet/minecraft/util/BlockRenderLayer;
	element 方法调用者
	clazz 今晚就拿你来煲汤
	layer 原地形渲染类型
advancedshader/Hook$ForwardFeatures.getVersionText(Z)Ljava/lang/String;
	enabled 已启用
advancedshader/Hook$ForwardFeatures.isAllowNegative(I)I
	id 原始ID
advancedshader/Hook$ForwardFeatures.isNegative(I)I
	id 原始ID
advancedshader/Hook$ForwardFeatures.nextLightningEntity(Lnet/minecraft/entity/Entity;)V
	entity 闪电实体
advancedshader/Hook$ForwardFeatures.remapBlockID(Ljava/lang/String;)Ljava/lang/String;
	blockID 方块ID
	properties 属性字符串集
	results 映射结果集
	tokens 分词集
	mapper 方块状态映射器
	state 方块状态字符串
	line 方块状态集字符串
	states 方块状态字符串集
	set 结果集
	parser 只出场一次的解析器
advancedshader/Hook$ForwardFeatures.remapEntityID(Ljava/lang/String;I)Ljava/lang/String;
	key 实体
	line 实体集
	id 自定义实体ID
advancedshader/Hook$ForwardFeatures.remapItemID(Ljava/lang/String;)Ljava/lang/String;
	blockID 方块ID
	target 映射目标
	tokens 分词集
	mapper 映射器
	state 方块字符串
	line 方块集字符串
	states 方块字符串集
	set 结果集
	parser 只出场一次的解析器
advancedshader/Hook$ForwardFeatures.replaceBlockVersionMacro(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	macros 预定义宏字符串
	path 文件路径
advancedshader/Hook$ForwardFeatures.replaceRenderLayer(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/util/BlockRenderLayer;)Lnet/minecraft/util/BlockRenderLayer;
	state 方块状态
	layer 原始地形渲染类型
advancedshader/Hook$ForwardFeatures.replaceShaderVersionMacro(Ljava/lang/String;)Ljava/lang/String;
	macros 宏
advancedshader/Hook$ForwardFeatures.setEnumShaderOption(Lnet/optifine/shaders/config/EnumShaderOption;Ljava/lang/String;)Z
	option 光影选项
	value 值
advancedshader/Hook$ForwardFeatures.updateMoodTick(I)I
	ambienceTicks 环境音效刻
	playSound 是否吓你一大跳
	player 玩家
	world 咋瓦鲁多
	randomPos 随机坐标
	skyLight 天空光照亮度
advancedshader/Hook$LangFix.fixLanguage(Ljava/util/zip/ZipFile;Ljava/lang/String;)Ljava/io/InputStream;
	optional 文件搜索结果
	zip 光影宝宝
	filePath 目标文件路径
advancedshader/Hook$LineShader.endAddVertex(Lnet/minecraft/client/renderer/BufferBuilder;)V
	size 顶点数据大小
	count count
	buffer 原始顶点缓冲区
	dup 顶点缓冲区
	vertex 单一顶点数据
	builder 顶点组装器
advancedshader/Hook$LineShader.getNormalsFromBuffer(Ljava/nio/ByteBuffer;II)V
	i 临时下标
	buffer 顶点缓冲区
	vertexSize 顶点数据大小
	count 填充数量
	position 当前缓冲区位置
	x1 线段首部X
	y1 线段首部Y
	z1 线段首部Z
	x2 线段X差值
	y2 线段Y差值
	z2 线段Z差值
	dist 线段长度
advancedshader/Hook$LineShader.preDrawArray(ILnet/minecraft/client/renderer/BufferBuilder;)I
	buffer 顶点缓冲区
	size 顶点数据大小
	count 线段顶点数量
	retMode 替代渲染模式
	drawMode 渲染模式
	builder 顶点组装器
advancedshader/Hook$LineShader.shouldConvertQuads(I)Z
	drawMode 渲染模式
advancedshader/Hook$MoreBuffers.attachColorBuffer(Lnet/optifine/shaders/Program;)V
	i 临时下标
	isShadow 是否为阴影几何着色器
	texture 纹理
	usedDrawBuffers 已使用缓冲区数量
	buffer 渲染目标
	settings 渲染目标配置
	isGbuffers 是否为几何着色阶段
	resized 是否已切换可变分辨率帧缓冲
	program 着色器程序
advancedshader/Hook$MoreBuffers.checkRenderTargets(Lnet/optifine/shaders/config/ShaderLine;Lnet/optifine/shaders/Program;)V
	token 分词
	i 渲染目标
	tokenizer 分词器
	builder 字符串组装器
	targets 渲染目标集
	line 着色器代码行
	program 着色器程序
advancedshader/Hook$MoreStages$ShadowFlipTextures.<init>(Ljava/nio/IntBuffer;)V
	textures 纹理集合
advancedshader/Hook$MoreStages$ShadowFlipTextures.flip(I)V
	index 缓冲区
	flipped 需要翻转到另一面的纹理
advancedshader/Hook$MoreStages.checkComposites()V
	prepare 预处理着色器程序
	shadowComp 阴影后处理着色器程序
advancedshader/Hook$MoreStages.clearShadowMap()V
	color 清理颜色
	i 临时下标
advancedshader/Hook$MoreStages.genShadowCompMipmap()V
	i 临时下标
advancedshader/Hook$MoreStages.getColorTextureImageUnit([Lnet/optifine/shaders/Program;)[I
	programs 后处理着色器程序集
advancedshader/Hook$MoreStages.getCustomTextures([Lnet/optifine/shaders/Program;[Lnet/optifine/shaders/ICustomTexture;)[Lnet/optifine/shaders/ICustomTexture;
	programs 后处理着色器程序集
	deferred 原始自定义纹理
advancedshader/Hook$MoreStages.getFlipBuffer([Lnet/optifine/shaders/Program;)Lnet/optifine/shaders/FlipTextures;
	programs 后处理着色器程序集
advancedshader/Hook$MoreStages.parseShadowClear(Ljava/lang/String;)V
	buffer 阴影缓冲区纹理名
	i 阴影缓冲区ID
advancedshader/Hook$MoreStages.parseShadowClearColor(Ljava/lang/String;Lnet/optifine/shaders/config/ShaderLine;)V
	color 清理颜色
	buffer 阴影缓冲区纹理名
	line 着色器代码行
	i 阴影缓冲区ID
advancedshader/Hook$MoreStages.parseShadowFormat(Ljava/lang/String;ILjava/lang/String;)V
	buffer 阴影缓冲区纹理名
	format 纹理格式
	formatStr 纹理格式字符串
	i 阴影缓冲区ID
advancedshader/Hook$MoreStages.preDrawComposite()V
	active 当前着色器程序
advancedshader/Hook$MoreStages.setupShadowFlipBuffer()V
	i 临时下标
advancedshader/Hook$PropertyFix.getShaderOptionHeader(Ljava/lang/String;Ljava/lang/StringBuilder;)V
	shaderoption 光影选项
	s 光影选项代码行
	i 临时下标
	ashaderoption 光影选项集
	iterator 迭代器
	line 配置文件行
	builder 字符串组装器
advancedshader/Hook$RenderStage.addRenderStageMacros([Lnet/optifine/shaders/config/ShaderMacro;)[Lnet/optifine/shaders/config/ShaderMacro;
	i 临时下标
	macros 原始预定义宏集合
	stages 渲染阶段集合
	result 预定义宏集合
advancedshader/Hook$RenderStage.setRenderStage(Ladvancedshader/Hook$RenderStage;)V
	stage 渲染阶段
advancedshader/Hook$RenderStage.valueOf(Ljava/lang/String;)Ladvancedshader/Hook$RenderStage;
	name 恭喜你发现我啦_喜欢我的模组嘛_希望你玩的开心哦
advancedshader/Hook$VertexAttribute.bindAttributes(I)V
	programID 着色器程序
advancedshader/Hook$VertexAttribute.checkAttributes(Lnet/optifine/shaders/config/ShaderLine;)V
	line 着色器代码行
advancedshader/Hook$VertexAttribute.setMidBlock(Lnet/minecraft/client/renderer/BufferBuilder;)V
	pos 数据位置
	x X偏移量
	y Y偏移量
	z Z偏移量
	w 合并值
	i 临时下标
	count 起点
	buffer 顶点缓冲区
	builder 顶点组装器
	size 顶点数据大小
advancedshader/Hook.<init>()V
	meta 模组信息
advancedshader/Hook.addMacroLines(Ljava/lang/StringBuilder;)V
	sb 字符串组装器
	afLevel 各向异性过滤级别
advancedshader/Hook.addPrograms(Lnet/optifine/shaders/Programs;)V
	programs 着色器程序集
advancedshader/Hook.addUniforms(Lnet/optifine/shaders/uniform/ShaderUniforms;)V
	i 临时下标
	uniforms 统一变量集
advancedshader/Hook.applyOptions(Ljava/lang/String;[Lnet/optifine/shaders/config/ShaderOption;)Ljava/lang/String;
	e 异常
	line 代码行
	options 光影选项集
advancedshader/Hook.getCameraPositionX()D
	e 异常
advancedshader/Hook.getCameraPositionY()D
	e 异常
advancedshader/Hook.getCameraPositionZ()D
	e 异常
advancedshader/Hook.getDfb()I
	e 异常
advancedshader/Hook.getField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
	clazz 类对象
	name 属性名
	field 属性
advancedshader/Hook.getMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
	clazz 类对象
	name 方法名
	args 方法参数类型
	method 方法
advancedshader/Hook.getPixelFormat(I)I
	e 异常
	format 纹理格式
advancedshader/Hook.getSfb()I
	e 异常
advancedshader/Hook.getShadowBufferIndex(Ljava/lang/String;)I
	buffer 缓冲区纹理名
advancedshader/Hook.getShadowMapHeight()I
	e 异常
advancedshader/Hook.getShadowMapWidth()I
	e 异常
advancedshader/Hook.getUsedColorBuffers()I
	e 异常
advancedshader/Hook.getUsedDepthBuffers()I
	e 异常
advancedshader/Hook.getUsedDrawBuffers()I
	e 异常
advancedshader/Hook.getUsedShadowColorBuffers()I
	e 异常
advancedshader/Hook.getUsedShadowDepthBuffers()I
	e 异常
advancedshader/Hook.printChatAndLogError(Ljava/lang/String;)V
	log 错误信息
advancedshader/Hook.printLogInfo(ILjava/lang/String;)Z
	e 异常
	obj 着色器
	log 日志
advancedshader/Hook.printShaderLogInfo(ILjava/lang/String;Ljava/util/List;)Z
	e 异常
	shader 着色器
	name 着色器名称
	listFiles 源码文件集
advancedshader/Hook.registerBus(Lcom/google/common/eventbus/EventBus;Lnet/minecraftforge/fml/common/LoadController;)Z
	bus 事件总线
	controller 控制器
advancedshader/Hook.renderComposites([Lnet/optifine/shaders/Program;Z)V
	programs 后处理着色器程序集
	isFinal 是否最终阶段
advancedshader/Hook.setCameraPositionX(D)V
	d 坐标值
advancedshader/Hook.setCameraPositionY(D)V
	d 坐标值
advancedshader/Hook.setCameraPositionZ(D)V
	d 坐标值
advancedshader/Hook.setEyePosY(F)V
	f 坐标值
advancedshader/Hook.setProgramUniform1f(Lnet/optifine/shaders/uniform/ShaderUniform1f;F)V
	su 统一变量
	value 数值
advancedshader/Hook.setProgramUniform1i(Lnet/optifine/shaders/uniform/ShaderUniform1i;I)V
	su 统一变量
	value 数值
advancedshader/Hook.setProgramUniform3f(Lnet/optifine/shaders/uniform/ShaderUniform3f;FFF)V
	su 统一变量
	x 甲
	y 乙
	z 丙
advancedshader/Hook.setProgramUniform4f(Lnet/optifine/shaders/uniform/ShaderUniform4f;FFFF)V
	su 统一变量
	x 子
	y 丑
	z 寅
	w 卯
advancedshader/Hook.setUsedColorBuffers(I)V
	i 使用数量
advancedshader/Hook.setUsedDepthBuffers(I)V
	i 使用数量
advancedshader/Hook.setUsedShadowColorBuffers(I)V
	i 使用数量
advancedshader/Hook.setUsedShadowDepthBuffers(I)V
	i 使用数量
advancedshader/Hook.updateUniform(Lnet/optifine/shaders/Program;ZZ)V
	i 临时下标
	program 着色器程序
	hasDeferred 有非透明着色后处理咩
	hasCustomTextureGbuffer 有几何着色自定义纹理咩
advancedshader/core/Core.<clinit>()V
	url 全局资源定位
	uri 全剧资源标识符
	file 模组文件也就是老子我
advancedshader/core/Core.acceptOptions(Ljava/util/List;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V
	args 启动参数
	gameDir 游戏目录
	assetsDir 资源目录
	profile 玩家名称
advancedshader/core/Core.injectIntoClassLoader(Lnet/minecraft/launchwrapper/LaunchClassLoader;)V
	entry 文件
	matcher 正则匹配
	pattern 路径正则
	mod 老子我
	entries 文件集
	classLoader 类加载器
advancedshader/core/patcher/Patcher$ByteCode.ALoad(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.AStore(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.BIPush(I)Lorg/objectweb/asm/tree/IntInsnNode;
	i 常量值
advancedshader/core/patcher/Patcher$ByteCode.CheckCast(Ljava/lang/String;)Lorg/objectweb/asm/tree/TypeInsnNode;
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.DConst(I)Lorg/objectweb/asm/tree/InsnNode;
	i 常量值
advancedshader/core/patcher/Patcher$ByteCode.DLoad(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.DStore(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.FConst(I)Lorg/objectweb/asm/tree/InsnNode;
	i 常量值
advancedshader/core/patcher/Patcher$ByteCode.FLoad(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.FStore(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.GetField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/FieldInsnNode;
	owner 目标类名
	name 名称
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.GetStatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/FieldInsnNode;
	owner 目标类名
	name 名称
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.Goto(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IConst(I)Lorg/objectweb/asm/tree/InsnNode;
	i 常量值
advancedshader/core/patcher/Patcher$ByteCode.ILoad(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.IStore(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 目标变量
advancedshader/core/patcher/Patcher$ByteCode.IfGreaterEqualZero(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfGreaterThanZero(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntGreaterEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntGreaterThan(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntLessEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntLessThan(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfIntNotEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfLessThanZero(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfNotNull(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfNotZero(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfNull(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfObjEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfObjNotEqual(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.IfZero(Lorg/objectweb/asm/tree/LabelNode;)Lorg/objectweb/asm/tree/JumpInsnNode;
	target 跳转标签
advancedshader/core/patcher/Patcher$ByteCode.Inc(II)Lorg/objectweb/asm/tree/IincInsnNode;
	var 目标变量
	inc 增量
advancedshader/core/patcher/Patcher$ByteCode.InstanceOf(Ljava/lang/String;)Lorg/objectweb/asm/tree/TypeInsnNode;
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.InvokeInterface(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/MethodInsnNode;
	owner 目标类名
	name 方法名称
	desc 参数类型
advancedshader/core/patcher/Patcher$ByteCode.InvokeSpecial(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/MethodInsnNode;
	owner 目标类名
	name 方法名称
	desc 参数类型
advancedshader/core/patcher/Patcher$ByteCode.InvokeStatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/MethodInsnNode;
	owner 目标类名
	name 方法名称
	desc 参数类型
advancedshader/core/patcher/Patcher$ByteCode.InvokeVirtual(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/MethodInsnNode;
	owner 目标类名
	name 方法名称
	desc 参数类型
advancedshader/core/patcher/Patcher$ByteCode.LLoad(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 变量
advancedshader/core/patcher/Patcher$ByteCode.LStore(I)Lorg/objectweb/asm/tree/VarInsnNode;
	var 变量
advancedshader/core/patcher/Patcher$ByteCode.Ldc(Ljava/lang/Object;)Lorg/objectweb/asm/tree/LdcInsnNode;
	obj 常量对象
advancedshader/core/patcher/Patcher$ByteCode.New(Ljava/lang/String;)Lorg/objectweb/asm/tree/TypeInsnNode;
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.NewArray(I)Lorg/objectweb/asm/tree/IntInsnNode;
	type 类型
advancedshader/core/patcher/Patcher$ByteCode.NewArray(Ljava/lang/String;)Lorg/objectweb/asm/tree/TypeInsnNode;
	desc 类型
advancedshader/core/patcher/Patcher$ByteCode.PutField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/FieldInsnNode;
	owner 目标类名
	name 属性名称
	desc 属性类型
advancedshader/core/patcher/Patcher$ByteCode.PutStatic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/tree/FieldInsnNode;
	owner 目标类名
	name 属性名称
	desc 属性类型
advancedshader/core/patcher/Patcher$ByteCode.SIPush(I)Lorg/objectweb/asm/tree/IntInsnNode;
	i 常量值
advancedshader/core/patcher/Patcher$ModifyingNode.<init>(Lorg/objectweb/asm/tree/AbstractInsnNode;I)V
	node 目标字节码
	mode 修补类型
advancedshader/core/patcher/Patcher$ModifyingNode.<init>(Lorg/objectweb/asm/tree/AbstractInsnNode;ILadvancedshader/core/patcher/Patcher$1;)V
	x0 x0
	x1 x1
	x2 x2
advancedshader/core/patcher/Patcher.<init>()V
	cp 类结构修补
	mp 方法修补
	method 方法
	clazz 当前类对象
	patch 修补目标
	classPatch 类结构修补方法
	methodPatch 类内方法修补集
	methodPatched 已修补方法
advancedshader/core/patcher/Patcher.checkIfMatch(Lorg/objectweb/asm/tree/AbstractInsnNode;[Lorg/objectweb/asm/tree/AbstractInsnNode;)Z
	modify 修补节点
	match 目标字节码
	matchAll 目标全部匹配标识
	i 临时下标
	node 原始字节码
	target 目标字节码集
	matched 匹配标识
advancedshader/core/patcher/Patcher.checkNodeEqual(Lorg/objectweb/asm/tree/AbstractInsnNode;Lorg/objectweb/asm/tree/AbstractInsnNode;)Z
	a 节点对象A
	b 节点对象B
	clazz 节点类对象
	nodeA 字节码A
	nodeB 字节码B
advancedshader/core/patcher/Patcher.collect(Lorg/objectweb/asm/tree/AbstractInsnNode;)Lorg/objectweb/asm/tree/AbstractInsnNode;
	node 目标字节码
advancedshader/core/patcher/Patcher.inject(Lorg/objectweb/asm/tree/AbstractInsnNode;)Lorg/objectweb/asm/tree/AbstractInsnNode;
	node 目标字节码
advancedshader/core/patcher/Patcher.patch(Ljava/lang/String;Lorg/objectweb/asm/tree/MethodNode;[Lorg/objectweb/asm/tree/AbstractInsnNode;)[Lorg/objectweb/asm/tree/AbstractInsnNode;
	remove 待移除字节码
	modify 修补节点
	patch 目标字节码
	i 临时下标
	task 修补日志
	method 方法节点
	matchAndPatch 目标字节码集
	node 原始字节码
	list 已获取字节码集
advancedshader/core/patcher/Patcher.remove(Lorg/objectweb/asm/tree/AbstractInsnNode;)Lorg/objectweb/asm/tree/AbstractInsnNode;
	node 目标字节码
advancedshader/core/patcher/Patcher.transform(Ljava/lang/String;Ljava/lang/String;[B)[B
	key 方法标识符
	methodPatch 方法修补程序
	method 方法节点
	cw 类数据生成器
	ex 会说人话的异常
	e 异常
	cr 类数据解析器
	node 类节点
	name 原始类名
	transformedName 反混淆类名
	basicClass 类数据
advancedshader/core/patcher/forge/FMLClientHandlerPatcher.getAdditionalBrandingInformation(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/forge/ItemLayerModelPatcher.buildSideQuad(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label1 跳转标签1
	label2 跳转标签2
	label3 跳转标签3
	label4 跳转标签4
	label5 跳转标签5
	label6 跳转标签6
	label7 跳转标签7
	label8 跳转标签8
	label9 跳转标签9
	label10 跳转标签10
advancedshader/core/patcher/forge/MinecraftForgeClientPatcher.getRenderLayer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/BlockAliasesPatcher.loadBlockAliases(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ConnectedParserPatcher.parseBlockMetadatas(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ConnectedParserPatcher.parseMatchBlock(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/CustomSkyPatcher.renderSky(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/EntityAliasesPatcher.loadEntityAliases(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/EntityAliasesPatcher.reset(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/EnumShaderOptionPatcher.clinit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/GuiButtonEnumShaderOptionPatcher.getButtonText(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/GuiShadersPatcher.actionPerformed(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/GuiShadersPatcher.initGui(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/GuiSlotShadersPatcher.checkCompatible(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ItemAliasesPatcher.getItemAliasId(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ItemAliasesPatcher.loadItemAliases(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/MacroProcessorPatcher.getMacroHeader(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/MacroProcessorPatcher.process(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/MacroStatePatcher.processMacro(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ProgramPatcher.clinit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/PropertiesOrderedPatcher.put(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label1 跳转标签1
	label2 跳转标签2
advancedshader/core/patcher/optifine/SVertexBuilderPatcher.drawArrays(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	singleTexture 非多重纹理渲染
	drawEnd 渲染结束
advancedshader/core/patcher/optifine/SVertexBuilderPatcher.pushEntity(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderExpressionResolverPatcher.registerExpressions(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderMacrosPatcher.getExtensions(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderMacrosPatcher.getFixedMacroLines(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderPackParserPatcher.collectShaderOptions(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderPackParserPatcher.parseBlendStates(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderPackParserPatcher.resolveIncludes(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderPackZipPatcher.getResourceAsStream(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderParserPatcher.clinit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderParserPatcher.getColorIndex(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShaderParserPatcher.getIndex(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginBlockEntities(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginClouds(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginEntities(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginHand(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginParticles(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginRender(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label1 跳转标签1
advancedshader/core/patcher/optifine/ShadersPatcher.beginSky(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.beginWeather(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	skip 跳过复制深度图
advancedshader/core/patcher/optifine/ShadersPatcher.bindGbuffersTextures(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.clearRenderBuffer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.clinit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.createFragShader(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.createVertShader(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.endHand(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.getBufferIndexFromString(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	failed8 不是colortex8
	failed9 不是colortex9
	failed10 不是colortex10
	failed11 不是colortex11
	failed12 不是colortex12
	failed13 不是colortex13
	failed14 不是colortex14
	failed15 不是colortex15
advancedshader/core/patcher/optifine/ShadersPatcher.getCameraPosition(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.getDrawBuffer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.getEnumShaderOption(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersPatcher.getFramebufferStatusText(Lorg/objectweb/asm/tree/MethodNode;)V
	i 临时标签
	method 方法节点
	label 跳转标签
	lookup 数值跳转表
	matched 匹配成功标识
advancedshader/core/patcher/optifine/ShadersPatcher.getPixelFormat(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	lookup 数值跳转表
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersPatcher.getTextureIndex(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	labelGbuffer 几何着色跳转标签
	labelComp 后处理跳转标签
	equal2 预处理阶段跳转
	equal3 阴影后处理阶段跳转
advancedshader/core/patcher/optifine/ShadersPatcher.init(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersPatcher.initDrawBuffers(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.loadShaderPack(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.loadShaderPackProperties(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersPatcher.postDrawComposite(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.preDrawComposite(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.renderComposites(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label1 跳转标签1
	label2 跳转标签2
advancedshader/core/patcher/optifine/ShadersPatcher.renderDeferred(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.renderFinal(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.resetCustomTextures(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.resetRenderStage(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.setCamera(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.setCameraShadow(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.setEntityId(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.setEnumShaderOption(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersPatcher.setupFrameBuffer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label1 跳转标签1
	label2 跳转标签2
advancedshader/core/patcher/optifine/ShadersPatcher.setupProgram(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.setupShadowFrameBuffer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.uninit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.updateAlphaBlend(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersPatcher.useProgram(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	nvl 无几何着色自定义纹理
	call 判断结束
advancedshader/core/patcher/optifine/ShadersRenderPatcher.beginBlockDamage(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.beginTerrainCutout(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.beginTerrainCutoutMipped(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.beginTerrainSolid(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.postRenderChunkLayer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.preRenderChunkLayer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.renderShadowMap(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/optifine/ShadersRenderPatcher.resetRenderStage(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/optifine/ShadersRenderPatcher.setupArrayPointersVbo(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BlockRenderLayerPatcher.clinit(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BlockRenderLayerPatcher.values(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.draw(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	ifend1 判断结束1
	quad1 四边形模式1
	ifend2 判断结束2
	quad2 四边形模式2
	ifend3 判断结束3
	quad3 四边形模式3
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.drawForIcon(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.endVertex(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.getDrawMode(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	jmp 非四边形模式跳转
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.putPosition(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/BufferBuilderPatcher.quadsToTriangles(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	jmp 非线段模式跳转
advancedshader/core/patcher/vanilla/ChunkRenderContainerPatcher.preRenderChunk(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/vanilla/ChunkRenderDispatcherPatcher.uploadChunk(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/EntityRendererPatcher.renderWorldPass(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	terrain 地形渲染
	outline 方块选取框
	destroy 方块破坏动画
	particle 粒子
	weather 天气粒子
	hand 手持物品
	cloudabove 云
	handwater 手持半透明物品
	beginNoLitParticles 开始渲染高亮粒子
	checkParticleEnd 粒子渲染判断结束
advancedshader/core/patcher/vanilla/GameSettingsPatcher.setOptionFloatValueOF(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/vanilla/GlStateManagerPatcher.patch(Lorg/objectweb/asm/tree/ClassNode;)V
	clazz 类节点
	m 方法访问器
	disable 禁用颜色混合
	checkEnd 颜色混合开关配置结束
advancedshader/core/patcher/vanilla/GuiOverlayDebugPatcher.call(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/GuiVideoSettingsPatcher.actionPerformed(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RegionRenderCacheBuilderPatcher.init(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RenderChunkPatcher.fixBlockLayer(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RenderChunkPatcher.multModelviewMatrix(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RenderGlobalPatcher.drawBoundingBox(Lorg/objectweb/asm/tree/MethodNode;)V
	method method
advancedshader/core/patcher/vanilla/RenderGlobalPatcher.renderEntities(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	entitiesStart 实体渲染开始点
	entitiesEnd 实体渲染结束点
	blockEntitiesStart 实体方块渲染开始点
	blockEntitiesEnd 实体方块渲染结束点
	lightningSkip 闪电实体渲染跳过点
advancedshader/core/patcher/vanilla/RenderGlobalPatcher.renderSky(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RenderGlobalPatcher.renderWorldBorder(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/RenderListPatcher.preRenderRegion(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/vanilla/TextureMapPatcher.loadTextureAtlas(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/TextureMapPatcher.updateAnimations(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	normalEnd 法线图结束
	specularEnd 高光图结束
advancedshader/core/patcher/vanilla/VboRenderListPatcher.preRenderRegion(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/vanilla/WorldClientPatcher.playMoodSoundAndCheckLight(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	label 跳转标签
advancedshader/core/patcher/vanilla/WorldClientPatcher.updateBlocks(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
advancedshader/core/patcher/vanilla/WorldVertexBufferUploaderPatcher.draw(Lorg/objectweb/asm/tree/MethodNode;)V
	method 方法节点
	succ 需要转换
	jmp 跳转至光影渲染处理方法
